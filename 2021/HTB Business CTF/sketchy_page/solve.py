from binascii import unhexlify

# 1st part
chall

def decode(string):
    return ''.join([string[i+2:i+4]+string[i:i+2] for i in range(0,len(string),4)])

decoded_chall = unhexlify(decode(chall))
print(repr(decoded_chall))

#2nd part
from wincrypto import *
from wincrypto.constants import *

key = b"S3CR3T_KEY_DONT_TELL_ANYONE!!!!!"
data = unhexlify("488D35CDFFFFFF4883EC304889D94889F249C7C02C00000049C7C10000000048C74424200100000048897C2428FF55D84883C4304C8B274883EC2048C7C10000000048C7C20010000049C7C00010000049C7C104000000FF55C04883C4204889C7E9000200009D409D1C952089CB89B0BBA86237BB83DC37AB434D7ACBD178C300EC56C42194E636AA958494FF006DF188B06DFA072F72B70EC74B28E3B979B0300C6B3CEAF6F080BD322A8E06F7311F182A4CFCACE5639DF736153E04F0E13B28904C41A4E5BF3B636C7AE20E4C588057C009C8ED03A0F20786FB3EA16A1B48525EE37B630DBDAF702A36C90080BF794DD5AB98ADEC7891E3E413D8E2B2E3110E1EB479F934AB3D59B34EFCB2C00EFBB963D3433C10861D373DF4767FFFCEC49F8031206986AB50B415BCB2DEB2310C3DBB4F9E6481E52A08AE42E9B4C6B007806A0FD194D20DC88642F658AA799AAAC8B47963C3E004B516C3473B9F29B2CE0F2C23DA577271CC6B6D50069E4C98E61ECCDA6E3A652606CD3F83259C9A95D02140D30CE5F1113968FDA2FCE01729CD8263B7950069680AFB39E6302D5E754C09F0D7913A1E6A499249C03824BF550069B34C170B59A68C219E7DFE7EDD2E9E76FEB343D047383A550CBA387C82B84CF488A92293A8C44B6A9CC0D55C93B0D59FA5B25A94CE5541B85F7F15662B16FE41DEA73BF5335A26B443DA5F9DA5A8397CA84C999DB5171D60C71712D90B8446257F8B28BBA8AF608153C3E9F8B877DDEA23E89981046CE5B186B59467D38F330802B8F0161735E7B8A5759EEA1C1FB4293727D06A572EC37C138545F701B1452884F6690231C7226BB1267FE3C9B0F98908DB8A18DA48C7C100020000488D35F2FDFFFFF3A44889C7488D5DF8C703000200004883EC304C89E148C7C20000000049C7C00100000049C7C10000000048897C242048895C2428FF55E04883C430488D5DF84883EC204889F948C7C20010000049C7C0200000004989D9FF55C84883C420488B4DB0488B55B8FFD7C9C300000000")


sha1_hasher = CryptCreateHash(CALG_SHA1)
CryptHashData(sha1_hasher, key)
aes_key = CryptDeriveKey(sha1_hasher, CALG_AES_256)
aes_key.key = key

for i in range(len(data)):
    d = data[i:]
    if(len(d) % 16 != 0):
        d = d[:-(len(d)%16)]
    data_d = CryptDecrypt(aes_key,d)
    # if(b'HTB' in data_d):
    print(data_d)
    if b'HTB' in data_d:
        break
    print('---')